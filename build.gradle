plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.8.20"
    id "org.jetbrains.intellij" version "1.13.3"
}

def pluginVersion = "1.0.0"
def pluginSinceBuild = "203.5981.155"
def pluginUntilBuild = ""

group = "com.vladsch.plugins"
version = pluginVersion

repositories {
    mavenLocal()
    mavenCentral()
}

// Configure Gradle IntelliJ Plugin
// Read more: https://plugins.jetbrains.com/docs/intellij/tools-gradle-intellij-plugin.html
intellij {
    version = "2020.3"
    type = "CL" // Target IDE Platform
    downloadSources = true

    plugins = []
}

dependencies {
    annotationProcessor "junit:junit:4.13.2"
    testImplementation "junit:junit:4.13.2"

    implementation "org.jetbrains:annotations:24.0.1"
    implementation("io.github.java-native:jssc:2.9.4") {
        exclude(group: "org.slf4j", module: "slf4j-api")
    }

    compileOnly(files("lib/serial-monitor.jar"))
}

// Set the JVM compatibility versions
compileJava {
    sourceCompatibility = "11"
    targetCompatibility = "11"
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

tasks {
    instrumentCode {
        enabled = true
    }

    setupInstrumentCode {
        enabled = true
    }

    buildSearchableOptions {
        enabled = false
    }

    runIde {
        enabled = false
    }

    patchPluginXml {
        version.set(pluginVersion)
        sinceBuild.set(pluginSinceBuild)
        untilBuild.set(pluginUntilBuild)
    }

    signPlugin {
        certificateChain.set(System.getenv("CERTIFICATE_CHAIN"))
        privateKey.set(System.getenv("PRIVATE_KEY"))
        password.set(System.getenv("PRIVATE_KEY_PASSWORD"))
    }

    publishPlugin {
        token.set(System.getenv("PUBLISH_TOKEN"))
    }
}
